name: CI/CD Pipeline

on:
  pull_request:
    branches: [main, development]
  push:
    branches: [main, development]
  workflow_dispatch:

jobs:
  setup:
    name: Setup
    uses: ./.github/workflows/setup.yml

  lint:
    name: Lint and Type Check
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18'
          cache: 'yarn'

      - name: Cache dependencies
        id: yarn-cache
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --prefer-offline || yarn install

      - name: Lint code
        run: yarn lint

      - name: Type check
        run: yarn check

  build:
    name: Build
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18'
          cache: 'yarn'

      - name: Cache dependencies
        id: yarn-cache
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --prefer-offline || yarn install

      - name: Build package
        run: yarn build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/
          retention-days: 1

  unit_tests:
    name: Unit Tests
    needs: [setup, build]
    uses: ./.github/workflows/vitest.yml
    with:
      node-version: '20.18'

  e2e_tests:
    name: E2E Tests
    needs: [setup, build]
    uses: ./.github/workflows/e2e-tests.yml
    with:
      node-version: '20.18'
      
  codeclimate:
    name: CodeClimate Analysis
    needs: [unit_tests]
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18'
          cache: 'yarn'
          
      - name: Install dependencies
        run: yarn install --prefer-offline || yarn install
        
      - name: Download test coverage
        uses: actions/download-artifact@v4
        with:
          name: unit-test-results-0
          path: coverage/
          
      - name: Setup CodeClimate test-reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          
      - name: Report coverage to CodeClimate
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
          GIT_BRANCH: ${{ github.head_ref || github.ref_name }}
          GIT_COMMIT_SHA: ${{ github.event.pull_request.head.sha || github.sha }}
        run: |
          ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.json coverage/lcov.info
          ./cc-test-reporter upload-coverage -i coverage/codeclimate.json

# The docs and deploy-docs jobs have been moved to changesets.yml
